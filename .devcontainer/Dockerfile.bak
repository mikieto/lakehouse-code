# .devcontainer/Dockerfile

########## build stage ##########
FROM python:3.12-slim

ARG TFC_VER=v1.28.6
ARG OPA_VER=v0.64.0
ARG GITLEAKS_VER=8.18.2
ARG DBT_VER=1.9.0
ARG ATHENA_VER=1.9.0

ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /work

# 1. Install base dependencies needed for adding repos and basic tools
#    Includes prerequisites for both HashiCorp and Docker repos
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    build-essential \
    wget \
    git \
    unzip \
    jq \
    vim \
    rsync \
    less \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# 2. Add HashiCorp GPG Key and Repository (for Terraform)
RUN wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" > /etc/apt/sources.list.d/hashicorp.list

# 3. Add Docker GPG Key and Repository (for Docker CLI)
RUN mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
      $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# 4. Update apt list *after* adding all repos and install Terraform & Docker CLI
RUN apt-get update && apt-get install -y --no-install-recommends \
    terraform \
    docker-ce-cli \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# 5. Install AWS CLI v2 (Keep this section as it was)
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf awscliv2.zip ./aws

# 6. dbt + athena
RUN pip install --no-cache-dir \
    "dbt-core==${DBT_VER}" \
    "dbt-athena==${ATHENA_VER}"

# 7. tfsec
RUN curl -fsSL https://github.com/aquasecurity/tfsec/releases/download/${TFC_VER}/tfsec-linux-amd64 \
-o /usr/local/bin/tfsec && chmod +x /usr/local/bin/tfsec

# 8. opa
RUN curl -fsSL -o /usr/local/bin/opa \
https://github.com/open-policy-agent/opa/releases/download/${OPA_VER}/opa_linux_amd64_static && \
chmod +x /usr/local/bin/opa

# 9. gitleaks
RUN set -eux; \
ARCH="$(dpkg --print-architecture)"; \
[ "$ARCH" = "amd64" ] && ARCH=x64; \
curl -fsSL "https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VER}/gitleaks_${GITLEAKS_VER}_linux_${ARCH}.tar.gz" \
    | tar -xz -C /usr/local/bin gitleaks

# 10. Verify installations (Add docker --version)
RUN echo "Verifying tool installations..." && \
    git --version && \
    terraform --version && \
    aws --version && \
    dbt --version && \
    docker --version && \
    python --version && \
    pip --version && \
    echo "Tool verification complete."

ENV DEBIAN_FRONTEND=

# VS Code devcontainer
RUN groupadd -g 1000 vscode && useradd -u 1000 -g vscode -m -s /bin/bash vscode
USER vscode
WORKDIR /workspace
