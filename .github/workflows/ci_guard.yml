# ci_guard.yml

name: ci_guard

# Trigger only when IaC or workflow files change
on:
  push:
    paths: [ "infra/**/*.tf", ".github/workflows/**" ]
  pull_request:
    paths: [ "infra/**/*.tf", ".github/workflows/**" ]

# Prevent duplicate runs on the same branch / PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
#--------------------------------------------------
# 0) Sync canonical → .github/workflows
#--------------------------------------------------
  sync-workflows:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    steps:
      - uses: actions/checkout@v4

      - name: Sync files
        id: sync
        run: |
          python3 scripts/sync_ci_block.py
          if git diff --quiet; then
            echo "no_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(ci): auto-sync workflows"
          push_options: '--force-with-lease'

# ------------------------------------------------------------
# Job 1 – Terraform fmt / validate / plan (re-usable template)
# ------------------------------------------------------------
  terraform-checks:
    needs: sync-workflows
    uses: ./.github/workflows/terraform.yml
    with:
      path:         infra
      prefix:       starter-lh
      env_name:     dev
      aws_region:   ${{ vars.AWS_REGION }}
      role_to_assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
    secrets:
      budget_email:  ${{ secrets.BUDGET_EMAIL }}

# ------------------------------------------------------------
# Job 2 – IaC linters & security (tflint + Trivy + SARIF)
# ------------------------------------------------------------
  security:
    needs: terraform-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- tflint (with plugin cache) ----------
      - name: Cache tflint plugins
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('**/.tflint.hcl') }}

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.51.1

      - name: Run tflint
        run: |
          tflint --init
          tflint

      # ---------- Trivy IaC scan (Terraform) ----------
      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: config            # IaC mode
          scan-ref: infra              # directory containing *.tf
          format: sarif
          output: trivy.sarif
          exit-code: 0                 # do not fail the job (learning mode)
          severity: CRITICAL,HIGH      # adjust as needed

      # ---------- Upload SARIF to GitHub “Security” tab ----------
      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

# ------------------------------------------------------------
# Job 3 – SBOM + Cosign attestation (push to main only)
# ------------------------------------------------------------
  sbom:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: security
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v4

      # ---------- SBOM generation ----------
      - uses: anchore/sbom-action@v0.17.0
        with:
          output-file: sbom.json

      - name: Cosign attest SBOM
        run: |
          cosign attest --predicate sbom.json \
                        --key env://COSIGN_PRIVATE_KEY \
                        ghcr.io/${{ github.repository }}/iac:${{ github.sha }}


      # ---------- Publish SBOM artifact ----------
      - uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

      # ---------- Placeholder for Great Expectations data contract ----------
      - run: echo "TODO - run GE checkpoint once data catalog is available"

# ------------------------------------------------------------
# Job 4 – Upload plan.json for downstream reuse (Infracost)
# ------------------------------------------------------------
  publish-plan:
    needs: terraform-checks
    runs-on: ubuntu-latest
    if: always()               # run even if plan failed (for debugging)
    steps:
      - name: Fetch plan.json
        uses: actions/download-artifact@v4
        with:
          name: plan-json
          path: .

      - name: Re-upload plan.json as tfplan-json
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-json
          path: plan.json
