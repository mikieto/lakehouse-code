# terraform_apply.yml

name: terraform_apply_template

on:
  workflow_call:
    inputs:
      bucket:       { type: string, required: true }
      state_key:    { type: string, required: true }
      lock_table:   { type: string, required: true }
      workspace:    { type: string, required: true }
      prefix:       { type: string, required: true }
      env_name:     { type: string, required: true }
      aws_region:   { type: string, default: "us-east-1" }
      extra_var:    { type: string, required: false, default: "" }
    secrets:
      budget_email:  { required: true }
      role_to_assume: { required: true }

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.x
          terraform_wrapper: false

      - uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tf-${{ inputs.workspace }}-${{ hashFiles('infra/.terraform.lock.hcl') }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.role_to_assume }}
          aws-region:     ${{ inputs.aws_region }}

      - name: Terraform init
        run: |
          terraform -chdir=infra init \
            -backend-config="bucket=${{ inputs.bucket }}" \
            -backend-config="key=${{ inputs.state_key }}" \
            -backend-config="region=${{ inputs.aws_region }}" \
            -backend-config="dynamodb_table=${{ inputs.lock_table }}"

      - name: Select or create workspace
        run: terraform -chdir=infra workspace select ${{ inputs.workspace }} || terraform -chdir=infra workspace new ${{ inputs.workspace }}

      - name: Terraform apply
        env:
          TF_VAR_prefix:        ${{ inputs.prefix }}
          TF_VAR_env:           ${{ inputs.env_name }}
          TF_VAR_budget_email:  ${{ secrets.budget_email }}
        run: |
          EXTRA=""
          if [ -n "${{ inputs.extra_var }}" ]; then
            EXTRA="-var=\"${{ inputs.extra_var }}\""
          fi
          terraform -chdir=infra apply -auto-approve -input=false $EXTRA
