# ci_plan_apply.yml

name: ci_plan_apply

on:
  push:
    branches: [ main ]
  pull_request:
    paths-ignore: ['**/*.md']
  workflow_dispatch:

# "plan-only" for PR (dev)
jobs:
  plan-dev:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/terraform_apply.yml
    with:
      bucket:         ${{ vars.STATE_BUCKET }}
      state_key:      ci/terraform.tfstate
      lock_table:     ${{ vars.LOCK_TABLE }}
      workspace:      dev
      prefix:         starter-lh
      env_name:       dev
      aws_region:     ${{ vars.AWS_REGION }}
      role_to_assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
      run_smoke:      false            # plan only
    secrets:
      budget_email:   ${{ secrets.BUDGET_EMAIL }}

# push to main or manual run â†’ dev Apply + Smoke
  apply-dev:
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/terraform_apply.yml
    with:
      bucket:         ${{ vars.STATE_BUCKET }}
      state_key:      ci/terraform.tfstate
      lock_table:     ${{ vars.LOCK_TABLE }}
      workspace:      dev
      prefix:         starter-lh
      env_name:       dev
      aws_region:     ${{ vars.AWS_REGION }}
      role_to_assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
      run_smoke:      true
    secrets:
      budget_email:   ${{ secrets.BUDGET_EMAIL }}

# After dev success, prod Apply only on main branch
  apply-prod:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: apply-dev
    uses: ./.github/workflows/terraform_apply.yml
    with:
      bucket:         ${{ vars.STATE_BUCKET }}
      state_key:      prod/terraform.tfstate
      lock_table:     ${{ vars.LOCK_TABLE }}
      workspace:      prod
      prefix:         starter-lh
      env_name:       prod
      aws_region:     ${{ vars.AWS_REGION }}
      role_to_assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
      run_smoke:      false           # skip smoke in prod
    secrets:
      budget_email:   ${{ secrets.BUDGET_EMAIL }}
