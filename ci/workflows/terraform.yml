# terraform.yml

name: terraform_template

on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: infra
      prefix:     { type: string, default: starter-lh }
      env_name:   { type: string, default: dev }
    secrets:
      budget_email:  { required: true }

env:
  TF_VAR_prefix:        ${{ inputs.prefix }}
  TF_VAR_env:           ${{ inputs.env_name }}
  TF_VAR_budget_email:  ${{ secrets.budget_email }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
    steps:
      - uses: actions/checkout@v4

      # ---------- cache plugins ----------
      - uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ${{ inputs.path }}/.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles(format('{0}/.terraform.lock.hcl', inputs.path)) }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.x
          terraform_wrapper: false

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.role_to_assume }}
          aws-region:     ${{ inputs.aws_region }}

      - name: Terraform init
        run: |
          terraform -chdir=${{ inputs.path }} init \
            -backend-config="bucket=${{ vars.STATE_BUCKET }}" \
            -backend-config="key=ci/${{ inputs.env_name }}.tfstate" \
            -backend-config="dynamodb_table=${{ vars.LOCK_TABLE }}" \
            -backend-config="region=${{ inputs.aws_region }}"

      - name: Terraform fmt
        run: terraform -chdir=${{ inputs.path }} fmt -check -recursive

      - name: Terraform plan
        env:
          TF_VAR_prefix:        ${{ inputs.prefix }}
          TF_VAR_env:           ${{ inputs.env_name }}
          TF_VAR_budget_email:  ${{ secrets.budget_email }}
        run: terraform -chdir=${{ inputs.path }} plan -no-color -input=false -out=tfplan

      - name: Export plan.json for downstream jobs
        run: terraform -chdir=${{ inputs.path }} show -json tfplan > plan.json

      - uses: actions/upload-artifact@v4
        with:
          name: plan-json
          path: plan.json
